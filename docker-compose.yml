services:
  arc-fe:
    container_name: "arc-fe"
    build:
      context: ./services/arc-fe
      dockerfile: Dockerfile
      args:
        VERSION: master
    environment:
      - NODE_ENV=production
    depends_on:
      - arc-be
    restart: unless-stopped

  arc-be:
    container_name: "arc-be"
    build:
      context: ./services/arc-be
      args:
        VERSION: master
    environment:
      - SECRET_KEY=my_very_strong_secret
    depends_on:
      - rabbitmq
      - redis
    restart: unless-stopped

  arc-ai:
    container_name: "arc-ai"
    build:
      context: ./services/arc-ai
      args:
        VERSION: master
        ONNXRUNTIME_VERSION: v1.18.1
    restart: unless-stopped
    
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  redis:
    image: "redis:alpine"
    container_name: "redis"

  arc-db:
    image: postgres:14
    container_name: "arc-db"
    environment:
      POSTGRES_USER: arcuser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: arcdb
    volumes:
      - ./services/arc-db/pgdata:/var/lib/postgresql/data

  tesseract:
    image: hertzg/tesseract-server:latest
    container_name: "tesseract"
    environment:
      - TS_PORT=8080
    restart: unless-stopped
